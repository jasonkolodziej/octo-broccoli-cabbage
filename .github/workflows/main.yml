name: Main

on:
  push:
    branches: 
      - "main"
  workflow_dispatch:
  # pull_request:
  #   branches: [ "main" ]

#? Defines two custom environment variables for the workflow. 
#? These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-buf-modules:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup buf.build action for publishing protobuf modules and plugins
      uses: bufbuild/buf-setup-action@v1.30.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        buf_user: ${{ secrets.BUFUSER }}
        buf_api_token: ${{ secrets.BUFTOKEN }}
        # Ensure that `buf` is installed
    - name: Validate buf is working
      run: |
        buf --version
        cd proto
        buf mod update
        buf build
        buf push
    - name: Update buf mod
      run: |
        cd proto
        buf mod update
    - name: Build buf mod
      run: |
        cd proto
        buf build
    - uses: bufbuild/buf-push-action@v1
      name: Push latest modules
      with:
        input: "proto"
        buf_token: ${{ secrets.BUFTOKEN }}
  
  build-protoc-plugin:
    runs-on: ubuntu-latest
    #? Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    #* Checkout
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    #? Uses the `docker/login-action` action to log in to the Container registry registry 
    #? using the account and password that will publish the packages. 
    #? Once published, the packages are scoped to the account defined here.
    - name: Log in to the Container registry
      uses: docker/login-action@v3.1.0
      with:
       registry: ${{ env.REGISTRY }}
       username: ${{ github.actor }}
       password: ${{ secrets.GITHUB_TOKEN }}
    #? This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags 
    #? and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced 
    #? in a subsequent step. The `images` value provides the base name for the tags and labels.
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        #? flavor defines a global behavior for tags:
        flavor: |
          latest=false
          prefix=v
        #? tags is the core input of this action as everything related to it will reflect the output metadata. 
        #? This one is in the form of a key-value pair list in CSV format to remove limitations intrinsically linked 
        #? to GitHub Actions (only string format is handled in the input fields).
        tags: |
          type=semver,pattern={{major}}.{{minor}},value=v1.0.0
    #? This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. 
    #? If the build succeeds, it pushes the image to GitHub Packages.
    #? It uses the `context` parameter to define the build's context as the set of files located in the specified path. 
    #? For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of 
    #? the `docker/build-push-action` repository.
    #? It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
    - name: Build docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        file: plugins/go-redact/Dockerfile
      #? Refer to: https://buf.build/docs/bsr/remote-plugins/custom-plugins#build-a-docker-image
        platforms:
          linux/amd64
        ##* ${{ steps.meta.outputs.tags }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Docker image list check
    # - uses: actions/checkout@v3
      #run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
      run: | # buf.build/jasonkolodziej/redact:v0.1.1
        docker image ls
        ls -al
    #* Push module to the BSR
    # - uses: bufbuild/buf-push-action@v1
    #   with:
    #     buf_token: ${{ secrets.BUFTOKEN }}
    #     # https://buf.build/docs/ci-cd/github-actions#buf-push
    #     input: --image buf.build/jasonkolodziej/redact:v0.1.1
    #     create_visibility: private
    #     draft: ${{ github.ref_name != 'main'}}
    - name: Setup buf.build action for publishing protoc-plugin image
      uses: bufbuild/buf-setup-action@v1.30.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        buf_user: ${{ secrets.BUFUSER }}
        buf_api_token: ${{ secrets.BUFTOKEN }}
        # Ensure that `buf` is installed
    - name: Validate buf is working
      run: buf --version
    
      # --image ${{ steps.yaml-data-name.outputs.data }}:${{ steps.yaml-data-version.outputs.data }}
    - name: Push buf.build image
      run: |
        ls -al
        buf beta registry plugin push ./plugins/go-redact --visibility public --verbose --debug --image ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
        
    - name: buf.build logout
      run: buf registry logout
    

          
